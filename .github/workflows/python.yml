name: Build and upload to PyPI

on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        python: ["cp310"]
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [ubuntu-20.04, musllinux_x86_64]
          # - [macos-12, macosx_x86_64]
          # - [macos-14, macosx_arm64]
          # - [windows-2019, win_amd64]
          # - [windows-2019, win32]

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # Used to push the built wheels
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.x"

      - name: Install dependencies [Windows]
        if: startsWith(matrix.buildplat[0], 'windows')
        shell: bash
        run: |
          choco install -y swig

      - name: Install dependencies [macOS]
        if: startsWith(matrix.buildplat[0], 'macOS')
        run: |
          brew install swig opencascade

      - name: Install dependencies [Ubuntu]
        if: startsWith(matrix.buildplat[0], 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y build-essential swig ninja-build wget libglu1-mesa-dev libgl1-mesa-dev libxmu-dev libxi-dev build-essential cmake libfreetype6-dev tk-dev python3-dev rapidjson-dev python3 git python3-pip libpcre2-dev
          wget -q -O occt-7.7.2.tar.gz "https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=cec1ecd0c9f3b3d2572c47035d11949e8dfa85e2;sf=tgz"
          tar -zxf occt-7.7.2.tar.gz
          cd occt-cec1ecd
          mkdir -p build
          cmake -S . -B build -DINSTALL_DIR=/opt/build/occt772 -DBUILD_RELEASE_DISABLE_EXCEPTIONS=OFF -DBUILD_MODULE_ApplicationFramew=OFF -DBUILD_MODULE_DETools=OFF -DBUILD_MODULE_DataExchange=OFF -DBUILD_MODULE_Draw=OFF -DBUILD_MODULE_Visualization=OFF -GNinja
          cmake --build build
          sudo cmake --install build
          export CMAKE_PREFIX_PATH="/opt/build/occt772/lib/cmake/opencascade:$CMAKE_PREFIX_PATH"

      - name: Build wheels
        uses: pypa/cibuildwheel@ce3fb7832089eb3e723a0a99cab7f3eaccf074fd # v2.16.5
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: cibw-wheels-${{ matrix.python }}-${{ matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # Used to push the built wheels
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          # Build sdist on lowest supported Python
          python-version: "3.10"

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to pypi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
